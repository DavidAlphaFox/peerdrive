[
	{peerdrive, [
		% The stores-section specifies all available stores in the PeerDrive
		% instance, much like /etc/fstab on a Unix system. Every entry consists
		% of a tuple with five fields:
		%   Tag         -- Unique tag for this store (atom)
		%   Description -- String describing the mount point (string)
		%   Flags       -- List of flags
		%                    system    -- System store (there must be exactly one)
		%                    removable -- Mountable on demand
		%                    net       -- Network store
		%   Module      -- Store implementation module (atom)
		%   Argument    -- Mount arguments for the store (store specific)
		%
		{stores, [
			% There must be exactly one unique, local, non-removable store
			% tagged as system store per PeerDrive instance.
			{
				sys,
				"System mountpoint",
				[system],
				peerdrive_file_store,
				{"stores/sys",  "System store"}
			},

			% File stores take exactly two arguments: the path to the directory
			% where the content is stored and a string with the default label
			% when the store is initially created.
			{
				usr,
				"Default user mount",
				[],
				peerdrive_file_store,
				{"stores/user", "User store"}
			}

			% It is also possible to define 'removable' stores which can be
			% mounted and unmounted at any time by the user. Removable stores
			% will be mounted by default.
			%
			%{
			%	rem1,
			%	"My removable drive",
			%	[removable],
			%	peerdrive_file_store,
			%	{"/media/POCKETDRIVE/.peerdrive", "Removable store"}
			%}

			% Network stores mount remote stores through the network which are
			% shared by other PeerDrive instances. Network stores should be
			% marked as removable, otherwise the PeerDrive instance might go
			% down when the remote store is not accessible.
			%
			% Arguments:
			%   Address -- Ip address of the remote server (string)
			%   Port    -- Port number of remote server (integer)
			%   Tag     -- Tag of the remote store (atom)
			%   Tls     -- TLS SSL options (optional, three choices)
			%                deny                   -- No TLS (default)
			%                {optional, SslOptions} -- Use TLS if available
			%                {required, SslOptions} -- Always use TLS
			%
			% SslOptions is a list with options of the Erlang ssl application.
			% The following options are typically useful:
			%   {cacertfile, "cacert.pem"}      -- Root certificate(s)
			%   {certfile, "my-cert.pem"}       -- Client certificate
			%   {keyfile, "my-private-key.pem"} -- Client private key
			%   {verify, verify_peer}           -- Verify server certificate
			%
			%{
			%	ns1,
			%	"'usr' on '192.168.0.1'",
			%	[net, removable],
			%	peerdrive_net_store,
			%	{"192.168.0.1", 4568, usr}
			%}
		]},
		{interfaces, [
			% The 'native' interface is used by PeerDrive aware applications
			% to use the full feature set. The following options are supported:
			%
			%    {port, Port}       -- TCP listening port (default: 4567, will change)
			%    {ip, "x.x.x.x"}    -- Bind to a specific network interface
			{native, [{ip, "127.0.0.1"}]},

			% The 'vfs' interface provides access to the stores through a FUSE
			% (Unix) or Dokan (Windows) mountpoint. The following options are
			% supported:
			%
			%    {mountpoint, "path"} -- Absolute or realtive path to the mount
			%                            point. The directory must exist.
			%                            Default: "vfs"
			% The following options are supported only by FUSE and are ignored
			% on Windows:
			%
			%    default_permissions  -- see FUSE documentation
			%    allow_other          -- see FUSE documentation
			%    {max_read, Size}     -- Limit maximum read size to `Size' bytes
			%    {user_id, UId}       -- The numeric user id of the mount owner
			%    {group_id, GId}      -- The numeric group id of the mount owner
			%    {uid, UId}           -- The numeric user id of the files owner
			%    {gid, GId}           -- The numeric group id of the files owner
			%    {umask, UMask}       -- The umask applied to all access permissions
			%
			% The following options are specific to Dokan on Windows:
			%
			%    {threads, Num}       -- Number of Dokan threads
			%    {debug_output, Type} -- Control Dokan debug output. Possible values:
			%                              false  -- Disable debug output (default)
			%                              true   -- Send debug output to debugger
			%                              stderr -- Send debug output to stderr
			%    {drive_type, Type}   -- Set Dokan drive type
			%                              hdd       -- Fixed drive (default)
			%                              removable -- Removable drive
			%                              network   -- Network drive (needs Dokan network provider)
			{vfs, []}

			% The 'netstore' interface shares one or more stores through the
			% network. Other PeerDrive servers may mount these shares through
			% a net_store store (see `stores' section). The following options
			% are supported:
			%
			%    {port, Port}       -- TCP listening port (default: 4568, will change)
			%    {ip, "x.x.x.x"}    -- Bind to a specific network interface
			%    {stores, [Stores]} -- List of stores (their tags) which are shared
			%    {tls, TlsMode}     -- TLS SSL mode
			%
			% TlsMode might be one of the following choices:
			%
			%    deny                   -- No TLS (default)
			%    {optional, SslOptions} -- Use TLS if available
			%    {required, SslOptions} -- Always use TLS
			%
			% SslOptions is a list with options of the Erlang ssl application.
			% The following options are typically useful:
			%
			%   {cacertfile, "cacert.pem"}      -- Root certificate(s)
			%   {certfile, "my-cert.pem"}       -- Server certificate (required)
			%   {keyfile, "my-private-key.pem"} -- Server private key (required)
			%   {verify, verify_peer}           -- Verify client certificate
			%   {fail_if_no_peer_cert, true}    -- Ditto
			%
			%{netstore, [ {stores, [usr]} ]}
		]}
	]}
].
