
=============================== Client API ====================================

Packet ::= Length::UINT16, Reference::UINT32, Opcode::Opcode, Body

Opcode ::=
	INIT_REQ            0x0000
	INIT_CNF            0x0001

	ENUM_REQ            0x0010
	ENUM_CNF            0x0011
	LOOKUP_DOC_REQ      0x0020
	LOOKUP_DOC_CNF      0x0021
	LOOKUP_REV_REQ      0x0030
	LOOKUP_REV_CNF      0x0031
	STAT_REQ            0x0040
	STAT_CNF            0x0041

	PEEK_REQ            0x0050
	PEEK_CNF            0x0051
	CREATE_REQ          0x0060
	CREATE_CNF          0x0061
	FORK_REQ            0x0070
	FORK_CNF            0x0071
	UPDATE_REQ          0x0080
	UPDATE_CNF          0x0081
	RESUME_REQ          0x0090
	RESUME_CNF          0x0091

	READ_REQ            0x00A0
	READ_CNF            0x00A1
	TRUNC_REQ           0x00B0
	TRUNC_CNF           0x00B1
	WRITE_REQ           0x00C0
	WRITE_CNF           0x00C1
	GET_TYPE_REQ        0x00D0
	GET_TYPE_CNF        0x00D1
	SET_TYPE_REQ        0x00E0
	SET_TYPE_CNF        0x00E1
	GET_PARENTS_REQ     0x00F0
	GET_PARENTS_CNF     0x00F1
	SET_PARENTS_REQ     0x0100
	SET_PARENTS_CNF     0x0101

	COMMIT_REQ          0x0110
	COMMIT_CNF          0x0111
	SUSPEND_REQ         0x0120
	SUSPEND_CNF         0x0121
	CLOSE_REQ           0x0130
	CLOSE_CNF           0x0131

	WATCH_ADD_REQ       0x0140
	WATCH_ADD_CNF       0x0141
	WATCH_REM_REQ       0x0150
	WATCH_REM_CNF       0x0151
	WATCH_PROGRESS_REQ  0x0160
	WATCH_PROGRESS_CNF  0x0161

	FORGET_REQ          0x0170
	FORGET_CNF          0x0171
	DELETE_DOC_REQ      0x0180
	DELETE_DOC_CNF      0x0181
	DELETE_REV_REQ      0x0190
	DELETE_REV_CNF      0x0191

	SYNC_DOC_REQ        0x01A0
	SYNC_DOC_CNF        0x01A1
	REPLICATE_DOC_REQ   0x01B0
	REPLICATE_DOC_CNF   0x01B1
	REPLICATE_REV_REQ   0x01C0
	REPLICATE_REV_CNF   0x01C1

	MOUNT_REQ           0x01D0
	MOUNT_CNF           0x01D1
	UNMOUNT_REQ         0x01E0
	UNMOUNT_CNF         0x01E1

	WATCH_IND           0x0002
	PROGRESS_START_IND  0x0012
	PROGRESS_IND        0x0022
	PROGRESS_END_IND    0x0032

Body ::=
	INIT_REQ            Version::Version
	INIT_CNF            Result::DirectCnf, Version::Version, MaxPacketSize::UINT32

	ENUM_REQ
	ENUM_CNF            Stores::List(Guid::UUID, Flags::StoreFlags, Id::String, Name::String)
	LOOKUP_DOC_REQ      Doc::UUID, Stores::List(Store::UUID)
	LOOKUP_DOC_CNF      Revs::List(Rev:UUID, Stores::List(Store::UUID)), PreRevs::List(PreRev:UUID, Stores::List(Store::UUID))
	LOOKUP_REV_REQ      Rev::UUID, Stores::List(Store::UUID)
	LOOKUP_REV_CNF      Stores::List(Store::UUID)
	STAT_REQ            Rev::UUID, Stores::List(Store::UUID)
	STAT_CNF            Result::BrokerCnf, (Flags::RevFlags, Parts::List(FourCC::UINT32, Size:UINT64, Hash::UINT128), Parents::List(Parent::UUID), Mtime:Time, TypeCode::String, CreatorCode::String, LinkMap::LinkMap)?

	PEEK_REQ            Rev::UUID, Stores::List(Store::UUID)
	PEEK_CNF            Result::BrokerCnf, (Handle::UINT32)?
	CREATE_REQ          TypeCode::String, CreatorCode::String, Stores::List(Store::UUID)
	CREATE_CNF          Result::BrokerCnf, (Handle::UINT32, Doc::UUID)?
	FORK_REQ            Rev::UUID, CreatorCode::String, Stores::List(Store::UUID)
	FORK_CNF            Result::BrokerCnf, (Handle::UINT32, Doc::UUID)?
	UPDATE_REQ          Doc::UUID, Rev::UUID, CreatorCode::String, Stores::List(Store::UUID)
	UPDATE_CNF          Result::BrokerCnf, (Handle::UINT32)?
	RESUME_REQ          Doc::UUID, Rev::UUID, CreatorCode::String, Stores::List(Store::UUID)
	RESUME_CNF          Result::BrokerCnf, (Handle::UINT32)?

	READ_REQ            Handle::UINT32, Part::UINT32, Offset::UINT64, Length::UINT32
	READ_CNF            Result::BrokerCnf, Data...
	TRUNC_REQ           Handle::UINT32, Part::UINT32, Offset::UINT64
	TRUNC_CNF           Result::BrokerCnf
	WRITE_REQ           Handle::UINT32, Part::UINT32, Offset::UINT64, Data...
	WRITE_CNF           Result::BrokerCnf
	GET_TYPE_REQ        Handle::UINT32
	GET_TYPE_CNF        Result::BrokerCnf, (TypeCode::String)?
	SET_TYPE_REQ        Handle::UINT32, TypeCode::String
	SET_TYPE_CNF        Result::BrokerCnf
	GET_PARENTS_REQ     Handle::UINT32
	GET_PARENTS_CNF     Result::BrokerCnf, (Parents::List(Parent::UUID))?
	SET_PARENTS_REQ     Handle::UINT32, Parents::List(Parent::UUID)
	SET_PARENTS_CNF     Result::BrokerCnf

	COMMIT_REQ          Handle::UINT32
	COMMIT_CNF          Result::BrokerCnf, (Rev::UUID)?
	SUSPEND_REQ         Handle::UINT32
	SUSPEND_CNF         Result::BrokerCnf, (Rev::UUID)?
	CLOSE_REQ           Handle::UINT32
	CLOSE_CNF           Result::BrokerCnf

	WATCH_ADD_REQ       Type::WatchType, Element::UUID
	WATCH_ADD_CNF       Result::DirectCnf
	WATCH_REM_REQ       Type::WatchType, Element::UUID
	WATCH_REM_CNF       Result::DirectCnf
	WATCH_PROGRESS_REQ  Enable::Bool
	WATCH_PROGRESS_CNF  Result::DirectCnf

	FORGET_REQ          Doc::UUID, Rev::UUID, Stores::List(Store::UUID)
	FORGET_CNF          Result::BrokerCnf
	DELETE_DOC_REQ      Doc::UUID, Rev::UUID, Stores::List(Store::UUID)
	DELETE_DOC_CNF      Result::BrokerCnf
	DELETE_REV_REQ      Rev::UUID, Stores::List(Store::UUID)
	DELETE_REV_CNF      Result::BrokerCnf

	SYNC_DOC_REQ        Doc::UUID, Depth::Time, Stores::List(Store::UUID)
	SYNC_DOC_CNF        Result::BrokerCnf, (Rev:UUID)?
	REPLICATE_DOC_REQ   Doc::UUID, Depth::Time, SrcStores::List(Store::UUID), DstStores::List(Store::UUID)
	REPLICATE_DOC_CNF   Result::BrokerCnf
	REPLICATE_REV_REQ   Rev::UUID, Depth::Time, SrcStores::List(Store::UUID), DstStores::List(Store::UUID)
	REPLICATE_REV_CNF   Result::BrokerCnf

	MOUNT_REQ           Id::String
	MOUNT_CNF           Result::DirectCnf
	UNMOUNT_REQ         Id::String
	UNMOUNT_CNF         Result::DirectCnf

	WATCH_IND           Event::WatchEvent, Type::WatchType, Element::UUID

	PROGRESS_START_IND  Tag:16, Type:8 {0=sync, 1=docrep, 2=revrep}, Data...
	PROGRESS_IND        Tag:16, Progress:8
	PROGRESS_END_IND    Tag:16


============================ Network Store API ================================

Packet ::= Length::UINT16, Reference::UINT32, Opcode::Opcode, Body

Opcode ::=
	INIT_REQ             0x0000
	INIT_CNF             0x0001

	STATFS_REQ           0x0010
	STATFS_CNF           0x0011
	LOOKUP_REQ           0x0020
	LOOKUP_CNF           0x0021
	CONTAINS_REQ         0x0030
	CONTAINS_CNF         0x0031
	STAT_REQ             0x0040
	STAT_CNF             0x0041

	PEEK_REQ             0x0050
	PEEK_CNF             0x0051
	CREATE_REQ           0x0060
	CREATE_CNF           0x0061
	FORK_REQ             0x0070
	FORK_CNF             0x0071
	UPDATE_REQ           0x0080
	UPDATE_CNF           0x0081
	RESUME_REQ           0x0090
	RESUME_CNF           0x0091

	READ_REQ             0x00A0
	READ_CNF             0x00A1
	TRUNC_REQ            0x00B0
	TRUNC_CNF            0x00B1
	WRITE_REQ            0x00C0
	WRITE_CNF            0x00C1
	GET_TYPE_REQ         0x00D0
	GET_TYPE_CNF         0x00D1
	SET_TYPE_REQ         0x00E0
	SET_TYPE_CNF         0x00E1
	GET_PARENTS_REQ      0x00F0
	GET_PARENTS_CNF      0x00F1
	SET_PARENTS_REQ      0x0100
	SET_PARENTS_CNF      0x0101
	GET_LINKS_REQ        0x0110
	GET_LINKS_CNF        0x0111
	SET_LINKS_REQ        0x0120
	SET_LINKS_CNF        0x0121
	COMMIT_REQ           0x0130
	COMMIT_CNF           0x0131
	SUSPEND_REQ          0x0140
	SUSPEND_CNF          0x0141
	CLOSE_REQ            0x0150
	CLOSE_CNF            0x0151

	FORGET_REQ           0x0160
	FORGET_CNF           0x0161
	DELETE_DOC_REQ       0x0170
	DELETE_DOC_CNF       0x0171
	DELETE_REV_REQ       0x0180
	DELETE_REV_CNF       0x0181

	PUT_DOC_REQ          0x0190
	PUT_DOC_CNF          0x0191
	PUT_REV_START_REQ    0x01A0
	PUT_REV_START_CNF    0x01A1
	PUT_REV_PART_REQ     0x01B0
	PUT_REV_PART_CNF     0x01B1
	PUT_REV_ABORT_REQ    0x01C0
	PUT_REV_ABORT_CNF    0x01C1
	PUT_REV_COMMIT_REQ   0x01D0
	PUT_REV_COMMIT_CNF   0x01D1

	SYNC_GET_CHANGES_REQ 0x01E0
	SYNC_GET_CHANGES_CNF 0x01E1
	SYNC_SET_ANCHOR_REQ  0x01F0
	SYNC_SET_ANCHOR_CNF  0x01F1
	SYNC_FINISH_REQ      0x0200
	SYNC_FINISH_CNF      0x0201

	ADD_REV_IND          0x0002
	REM_REV_IND          0x0012
	ADD_DOC_IND          0x0022
	REM_DOC_IND          0x0032
	MOD_DOC_IND          0x0042



============================== Common definitions =============================

UUID ::= UINT128

List(Body) ::= NumberOfElements::UINT8, Body{NumberOfElements}

List32(Body) ::= NumberOfElements::UINT32, Body{NumberOfElements}

String ::= LengthOfString::UINT16, CHAR{LengtOfString}

Bool ::= UINT8
	0   = False
	1   = True

ErrorCode ::= UINT32
	0	= ok
	1	= econflict
	2	= eambig
	256	= e2big
	257	= eacces
	258	= eaddrinuse
	259	= eaddrnotavail
	260	= eadv
	261	= eafnosupport
	262	= eagain
	263	= ealign
	264	= ealready
	265	= ebade
	266	= ebadf
	267	= ebadfd
	268	= ebadmsg
	269	= ebadr
	270	= ebadrpc
	271	= ebadrqc
	272	= ebadslt
	273	= ebfont
	274	= ebusy
	275	= echild
	276	= echrng
	277	= ecomm
	278	= econnaborted
	279	= econnrefused
	280	= econnreset
	281	= edeadlk
	282	= edeadlock
	283	= edestaddrreq
	284	= edirty
	285	= edom
	286	= edotdot
	287	= edquot
	288	= eduppkg
	289	= eexist
	290	= efault
	291	= efbig
	292	= ehostdown
	293	= ehostunreach
	294	= eidrm
	295	= einit
	296	= einprogress
	297	= eintr
	298	= einval
	299	= eio
	300	= eisconn
	301	= eisdir
	302	= eisnam
	303	= elbin
	304	= el2hlt
	305	= el2nsync
	306	= el3hlt
	307	= el3rst
	308	= elibacc
	309	= elibbad
	310	= elibexec
	311	= elibmax
	312	= elibscn
	313	= elnrng
	314	= eloop
	315	= emfile
	316	= emlink
	317	= emsgsize
	318	= emultihop
	319	= enametoolong
	320	= enavail
	321	= enet
	322	= enetdown
	323	= enetreset
	324	= enetunreach
	325	= enfile
	326	= enoano
	327	= enobufs
	328	= enocsi
	329	= enodata
	330	= enodev
	331	= enoent
	332	= enoexec
	333	= enolck
	334	= enolink
	335	= enomem
	336	= enomsg
	337	= enonet
	338	= enopkg
	339	= enoprotoopt
	340	= enospc
	341	= enosr
	342	= enosym
	343	= enosys
	344	= enotblk
	345	= enotconn
	346	= enotdir
	347	= enotempty
	348	= enotnam
	349	= enotsock
	350	= enotsup
	351	= enotty
	352	= enotuniq
	353	= enxio
	354	= eopnotsupp
	355	= eperm
	356	= epfnosupport
	357	= epipe
	358	= eproclim
	359	= eprocunavail
	360	= eprogmismatch
	361	= eprogunavail
	362	= eproto
	363	= eprotonosupport
	364	= eprototype
	365	= erange
	366	= erefused
	367	= eremchg
	368	= eremdev
	369	= eremote
	370	= eremoteio
	371	= eremoterelease
	372	= erofs
	373	= erpcmismatch
	374	= erremote
	375	= eshutdown
	376	= esocktnosupport
	377	= espipe
	378	= esrch
	379	= esrmnt
	380	= estale
	381	= esuccess
	382	= etime
	383	= etimedout
	384	= etoomanyrefs
	385	= etxtbsy
	386	= euclean
	387	= eunatch
	388	= eusers
	389	= eversion
	390	= ewouldblock
	391	= exdev
	392	= exfull
	393	= nxdomain

	0xffffffff	= Unknown error

BrokerResult ::= UINT8
	0	= ok      (operation succeeded everywhere)
	1	= partial (operation succeeded, but not on all stores)
	2	= fail    (operation failed)

DirectCnf ::= Result::ErrorCode

BrokerCnf ::= Result::BrokerResult, ErrInfo::ExtendedInfo

ExtendedInfo ::=
	Result=0:
	Result=1: ErrInfo::List(Store::UUID, Error::ErrorCode)
	Result=2: Error::ErrorCode, ErrInfo::List(Store::UUID, Error::ErrorCode)

WatchType ::= UINT8
	0	= Doc
	1	= Rev

WatchEvent ::= UINT8
	0	= Modified (Doc)
	1	= Appeared (Doc/Rev)
	2	= Replicated (Doc/Rev)
	3	= Diminished (Doc/Rev)
	4	= Disappeared (Doc/Rev)

StoreFlags ::= UINT32
	1	Mounted
	2	Removable
	4	System Store
	8	Network Store

RevFlags ::= UINT32
	[31..9] : undefined (0)
	[8]     : Preliminary flag
	[7..0]  : Format version
		0 = Current format

Version ::= UINT32
	[31..16] : undefined (0)
	[15..8]  : Major protocol revision (not compatible to other major revisions)
		0 = Current
	[7..0]   : Minor protocol revision (backwards compatible through major revision)
	    0 = Current

Time ::= UINT64
	Seconds since epoch, UTC

LinkMap ::=
	StrongDocLinks::List32(Doc::UUID),
	WeakDocLinks::List32(Doc::UUID),
	StrongRevLinks::List32(Rev::UUID),
	WeakRevLinks::List32(Rev::UUID),
	DocMap::List32(Doc::UUID, Revs::List(UUID))



